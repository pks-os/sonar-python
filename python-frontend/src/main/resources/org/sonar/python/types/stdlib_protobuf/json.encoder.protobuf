
json.encoderë
JSONEncoderjson.encoder.JSONEncoder"builtins.object*Ù
__init__!json.encoder.JSONEncoder.__init__"
None*>
self4
json.encoder.JSONEncoder"json.encoder.JSONEncoder*.
skipkeys
builtins.bool"builtins.bool *2
ensure_ascii
builtins.bool"builtins.bool *4
check_circular
builtins.bool"builtins.bool */
	allow_nan
builtins.bool"builtins.bool */
	sort_keys
builtins.bool"builtins.bool *}
indento
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None *¯

separatorsœ
,Union[Tuple[builtins.str,builtins.str],None]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
None *–
default†
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z38z39z310z311z312z313* 
default json.encoder.JSONEncoder.default"
Any*>
self4
json.encoder.JSONEncoder"json.encoder.JSONEncoder*
o
Anyz38z39z310z311z312z313*³
encodejson.encoder.JSONEncoder.encode"
builtins.str"builtins.str*>
self4
json.encoder.JSONEncoder"json.encoder.JSONEncoder*
o
Anyz38z39z310z311z312z313*ž

iterencode#json.encoder.JSONEncoder.iterencode"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*>
self4
json.encoder.JSONEncoder"json.encoder.JSONEncoder*
o
Any*/
	_one_shot
builtins.bool"builtins.bool z38z39z310z311z312z313j38j39j310j311j312j313rs
item_separator'json.encoder.JSONEncoder.item_separator
builtins.str"builtins.str*38*39*310*311*312*313rq
key_separator&json.encoder.JSONEncoder.key_separator
builtins.str"builtins.str*38*39*310*311*312*313ri
skipkeys!json.encoder.JSONEncoder.skipkeys
builtins.bool"builtins.bool*38*39*310*311*312*313rq
ensure_ascii%json.encoder.JSONEncoder.ensure_ascii
builtins.bool"builtins.bool*38*39*310*311*312*313ru
check_circular'json.encoder.JSONEncoder.check_circular
builtins.bool"builtins.bool*38*39*310*311*312*313rk
	allow_nan"json.encoder.JSONEncoder.allow_nan
builtins.bool"builtins.bool*38*39*310*311*312*313rk
	sort_keys"json.encoder.JSONEncoder.sort_keys
builtins.bool"builtins.bool*38*39*310*311*312*313r§
indentjson.encoder.JSONEncoder.indent`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*38*39*310*311*312*313˜
py_encode_basestring!json.encoder.py_encode_basestring"
builtins.str"builtins.str*#
s
builtins.str"builtins.strz38z39z310z311z312z313¤
py_encode_basestring_ascii'json.encoder.py_encode_basestring_ascii"
builtins.str"builtins.str*#
s
builtins.str"builtins.strz38z39z310z311z312z313*¤
__annotations__json.encoder.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*
ESCAPEjson.encoder.ESCAPED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313*‹
ESCAPE_ASCIIjson.encoder.ESCAPE_ASCIID
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313*‰
HAS_UTF8json.encoder.HAS_UTF8J
re.Pattern[builtins.bytes] 
builtins.bytes"builtins.bytes"
re.Pattern*38*39*310*311*312*313*¸

ESCAPE_DCTjson.encoder.ESCAPE_DCTu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313*_
INFINITYjson.encoder.INFINITY 
builtins.float"builtins.float*38*39*310*311*312*313