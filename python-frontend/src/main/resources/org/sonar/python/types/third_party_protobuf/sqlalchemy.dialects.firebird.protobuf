
sqlalchemy.dialects.firebird„
BIGINTsqlalchemy.sql.sqltypes.BIGINT""sqlalchemy.sql.sqltypes.BigIntegerj38j39j310j311j312j313ry
__visit_name__-sqlalchemy.sql.sqltypes.BIGINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313ﬁ
BLOBsqlalchemy.sql.sqltypes.BLOB"#sqlalchemy.sql.sqltypes.LargeBinaryj38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.BLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313€
CHAR&sqlalchemy.dialects.firebird.base.CHAR"-sqlalchemy.dialects.firebird.base._StringType"sqlalchemy.sql.sqltypes.CHAR*Ω
__init__/sqlalchemy.dialects.firebird.base.CHAR.__init__"
None*Z
selfP
&sqlalchemy.dialects.firebird.base.CHAR"&sqlalchemy.dialects.firebird.base.CHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313j38j39j310j311j312j313rÅ
__visit_name__5sqlalchemy.dialects.firebird.base.CHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313◊
DATEsqlalchemy.sql.sqltypes.DATE"sqlalchemy.sql.sqltypes.Datej38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.DATE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313€
FLOATsqlalchemy.sql.sqltypes.FLOAT"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313rx
__visit_name__,sqlalchemy.sql.sqltypes.FLOAT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313„
NUMERICsqlalchemy.sql.sqltypes.NUMERIC"sqlalchemy.sql.sqltypes.Numericj38j39j310j311j312j313rz
__visit_name__.sqlalchemy.sql.sqltypes.NUMERIC.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Î
SMALLINT sqlalchemy.sql.sqltypes.SMALLINT"$sqlalchemy.sql.sqltypes.SmallIntegerj38j39j310j311j312j313r{
__visit_name__/sqlalchemy.sql.sqltypes.SMALLINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313◊
TEXTsqlalchemy.sql.sqltypes.TEXT"sqlalchemy.sql.sqltypes.Textj38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.TEXT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313◊
TIMEsqlalchemy.sql.sqltypes.TIME"sqlalchemy.sql.sqltypes.Timej38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.TIME.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313¿
	TIMESTAMP!sqlalchemy.sql.sqltypes.TIMESTAMP" sqlalchemy.sql.sqltypes.DateTime*ﬁ
__init__*sqlalchemy.sql.sqltypes.TIMESTAMP.__init__"
None*P
selfF
!sqlalchemy.sql.sqltypes.TIMESTAMP"!sqlalchemy.sql.sqltypes.TIMESTAMP*.
timezone
builtins.bool"builtins.bool z38z39z310z311z312z313*s
get_dbapi_type0sqlalchemy.sql.sqltypes.TIMESTAMP.get_dbapi_type*
self*	
dbapiz38z39z310z311z312z313j38j39j310j311j312j313r|
__visit_name__0sqlalchemy.sql.sqltypes.TIMESTAMP.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313
VARCHAR)sqlalchemy.dialects.firebird.base.VARCHAR"-sqlalchemy.dialects.firebird.base._StringType"sqlalchemy.sql.sqltypes.VARCHAR*∆
__init__2sqlalchemy.dialects.firebird.base.VARCHAR.__init__"
None*`
selfV
)sqlalchemy.dialects.firebird.base.VARCHAR")sqlalchemy.dialects.firebird.base.VARCHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313j38j39j310j311j312j313rÑ
__visit_name__8sqlalchemy.dialects.firebird.base.VARCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*ô
__path__%sqlalchemy.dialects.firebird.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*¥
__annotations__,sqlalchemy.dialects.firebird.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*≥
__all__$sqlalchemy.dialects.firebird.__all__Â
ºTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310*311*312*313*T
dialect$sqlalchemy.dialects.firebird.dialect
Any*38*39*310*311*312*313