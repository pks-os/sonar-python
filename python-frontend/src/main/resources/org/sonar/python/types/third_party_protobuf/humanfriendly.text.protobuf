
humanfriendly.text]
compacthumanfriendly.text.compact*
text*
args*
kwz38z39z310z311z312z313c
compact_empty_lines&humanfriendly.text.compact_empty_lines*
textz38z39z310z311z312z313Ë
concatenatehumanfriendly.text.concatenate"
Any*
items
Any*/
conjunction
builtins.str"builtins.str *2
serial_comma
builtins.bool"builtins.bool z38z39z310z311z312z313[
dedenthumanfriendly.text.dedent*
text*
args*
kwz38z39z310z311z312z313[
formathumanfriendly.text.format*
text*
args*
kwz38z39z310z311z312z313˜
generate_slug humanfriendly.text.generate_slug"
Any*
text
Any*-
	delimiter
builtins.str"builtins.str z38z39z310z311z312z313W
is_empty_line humanfriendly.text.is_empty_line*
textz38z39z310z311z312z313Q

join_lineshumanfriendly.text.join_lines*
textz38z39z310z311z312z313ä
	pluralizehumanfriendly.text.pluralize"
Any*
count
Any*
singular
Any*i
plural[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313ì
pluralize_raw humanfriendly.text.pluralize_raw"
Any*
count
Any*
singular
Any*i
plural[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313m
random_string humanfriendly.text.random_string*
length *

characters z38z39z310z311z312z313ˆ
splithumanfriendly.text.split"
Any*
text
Any*-
	delimiter
builtins.str"builtins.str z38z39z310z311z312z313]
split_paragraphs#humanfriendly.text.split_paragraphs*
textz38z39z310z311z312z313M
tokenizehumanfriendly.text.tokenize*
textz38z39z310z311z312z313]
trim_empty_lines#humanfriendly.text.trim_empty_lines*
textz38z39z310z311z312z313*ª
__annotations__"humanfriendly.text.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313