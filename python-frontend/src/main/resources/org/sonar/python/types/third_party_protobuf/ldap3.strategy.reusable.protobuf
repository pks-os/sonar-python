
ldap3.strategy.reusableÕ
ReusableStrategy(ldap3.strategy.reusable.ReusableStrategy" ldap3.strategy.base.BaseStrategy*Å
	receiving2ldap3.strategy.reusable.ReusableStrategy.receiving"
None*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategyz38z39z310z311z312z313*Ç

get_stream3ldap3.strategy.reusable.ReusableStrategy.get_stream"
None*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategyz38z39z310z311z312z313*Û

set_stream3ldap3.strategy.reusable.ReusableStrategy.set_stream"
None*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategy*
value
Anyz38z39z310z311z312z313*á
__init__1ldap3.strategy.reusable.ReusableStrategy.__init__"
None*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategy*
ldap_connection
Anyz38z39z310z311z312z313*¦
open-ldap3.strategy.reusable.ReusableStrategy.open"
None*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategy*1
reset_usage
builtins.bool"builtins.bool *6
read_server_info
builtins.bool"builtins.bool z38z39z310z311z312z313*Å
	terminate2ldap3.strategy.reusable.ReusableStrategy.terminate"
None*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategyz38z39z310z311z312z313*Ø
send-ldap3.strategy.reusable.ReusableStrategy.send"
Any*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategy*
message_type
Any*
request
Any*k
controls[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*{
validate_bind6ldap3.strategy.reusable.ReusableStrategy.validate_bind*
self*
controlsz38z39z310z311z312z313*ÿ
get_response5ldap3.strategy.reusable.ReusableStrategy.get_response"
Any*^
selfT
(ldap3.strategy.reusable.ReusableStrategy"(ldap3.strategy.reusable.ReusableStrategy*
counter
Any*j
timeout[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *1
get_request
builtins.bool"builtins.bool z38z39z310z311z312z313*’
post_send_single_responseBldap3.strategy.reusable.ReusableStrategy.post_send_single_response*
self*
counterz38z39z310z311z312z313*€
post_send_search9ldap3.strategy.reusable.ReusableStrategy.post_send_search*
self*
counterz38z39z310z311z312z313j38j39j310j311j312j313r\
pools.ldap3.strategy.reusable.ReusableStrategy.pools
Any*38*39*310*311*312*313rq
sync-ldap3.strategy.reusable.ReusableStrategy.sync
builtins.bool"builtins.bool*38*39*310*311*312*313r
no_real_dsa4ldap3.strategy.reusable.ReusableStrategy.no_real_dsa
builtins.bool"builtins.bool*38*39*310*311*312*313ru
pooled/ldap3.strategy.reusable.ReusableStrategy.pooled
builtins.bool"builtins.bool*38*39*310*311*312*313r}

can_stream3ldap3.strategy.reusable.ReusableStrategy.can_stream
builtins.bool"builtins.bool*38*39*310*311*312*313rZ
pool-ldap3.strategy.reusable.ReusableStrategy.pool
Any*38*39*310*311*312*313*¯
__annotations__'ldap3.strategy.reusable.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*z
TERMINATE_REUSABLE*ldap3.strategy.reusable.TERMINATE_REUSABLE
builtins.str"builtins.str*38*39*310*311*312*313*j

BOGUS_BIND"ldap3.strategy.reusable.BOGUS_BIND
builtins.int"builtins.int*38*39*310*311*312*313*n
BOGUS_UNBIND$ldap3.strategy.reusable.BOGUS_UNBIND
builtins.int"builtins.int*38*39*310*311*312*313*r
BOGUS_EXTENDED&ldap3.strategy.reusable.BOGUS_EXTENDED
builtins.int"builtins.int*38*39*310*311*312*313*p
BOGUS_ABANDON%ldap3.strategy.reusable.BOGUS_ABANDON
builtins.int"builtins.int*38*39*310*311*312*313