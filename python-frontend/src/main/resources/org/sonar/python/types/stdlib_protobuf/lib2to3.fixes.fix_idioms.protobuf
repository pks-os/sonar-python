
lib2to3.fixes.fix_idioms§	
	FixIdioms"lib2to3.fixes.fix_idioms.FixIdioms"builtins.object*a
match(lib2to3.fixes.fix_idioms.FixIdioms.match*
self*
nodez38z39z310z311z312z313*v
	transform,lib2to3.fixes.fix_idioms.FixIdioms.transform*
self*
node*
resultsz38z39z310z311z312z313*Œ
transform_isinstance7lib2to3.fixes.fix_idioms.FixIdioms.transform_isinstance*
self*
node*
resultsz38z39z310z311z312z313*è
transform_while2lib2to3.fixes.fix_idioms.FixIdioms.transform_while"
None*R
selfH
"lib2to3.fixes.fix_idioms.FixIdioms""lib2to3.fixes.fix_idioms.FixIdioms*
node
Any*
results
Anyz38z39z310z311z312z313*æ
transform_sort1lib2to3.fixes.fix_idioms.FixIdioms.transform_sort"
None*R
selfH
"lib2to3.fixes.fix_idioms.FixIdioms""lib2to3.fixes.fix_idioms.FixIdioms*
node
Any*
results
Anyz38z39z310z311z312z313j38j39j310j311j312j313r™
BM_compatible0lib2to3.fixes.fix_idioms.FixIdioms.BM_compatible:
Literal[builtins.bool]	
builtins.bool"builtins.bool*38*39*310*311*312*313ro
PATTERN*lib2to3.fixes.fix_idioms.FixIdioms.PATTERN
builtins.str"builtins.str*38*39*310*311*312*313*°
__annotations__(lib2to3.fixes.fix_idioms.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*]
CMPlib2to3.fixes.fix_idioms.CMP
builtins.str"builtins.str*38*39*310*311*312*313*_
TYPElib2to3.fixes.fix_idioms.TYPE
builtins.str"builtins.str*38*39*310*311*312*313