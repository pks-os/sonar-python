
	pyautoguib
PyAutoGUIExceptionpyautogui.PyAutoGUIException"builtins.Exceptionj38j39j310j311j312j313j
FailSafeExceptionpyautogui.FailSafeException"pyautogui.PyAutoGUIExceptionj38j39j310j311j312j313t
ImageNotFoundException pyautogui.ImageNotFoundException"pyautogui.PyAutoGUIExceptionj38j39j310j311j312j313¡
Pointpyautogui.Point"builtins.tuple*≤
_replacepyautogui.Point._replace"Ö
pyautogui.Point._NTl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*ë
_selfÖ
pyautogui.Point._NTl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*)
x 
builtins.float"builtins.float *)
y 
builtins.float"builtins.float z38z39z310z311z312z313*—
__new__pyautogui.Point.__new__"Ö
pyautogui.Point._NTl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*∂
_cls´
Type[pyautogui.Point._NT]Ö
pyautogui.Point._NTl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"type*'
x 
builtins.float"builtins.float*'
y 
builtins.float"builtins.floatz38z39z310z311z312z313*´
_asdictpyautogui.Point._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ë
_selfÖ
pyautogui.Point._NTl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.floatz38z39z310z311z312z313*Ù
_makepyautogui.Point._make"Ö
pyautogui.Point._NTl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*∂
_cls´
Type[pyautogui.Point._NT]Ö
pyautogui.Point._NTl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz38z39z310z311z312z313j38j39j310j311j312j313rp
xpyautogui.Point.x 
builtins.float"builtins.float*38*38*39*39*310*310*311*311*312*312*313*313rp
ypyautogui.Point.y 
builtins.float"builtins.float*38*38*39*39*310*310*311*311*312*312*313*313r†
_fieldspyautogui.Point._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310*311*312*313r°
_field_typespyautogui.Point._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313rß
_field_defaultspyautogui.Point._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313r\
_sourcepyautogui.Point._source
builtins.str"builtins.str*38*39*310*311*312*313rß
__annotations__pyautogui.Point.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313rÔ
__match_args__pyautogui.Point.__match_args__®
2Tuple[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310*311*312*313€
Sizepyautogui.Size"builtins.tuple*ñ
_replacepyautogui.Size._replace"x
pyautogui.Size._NT`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*É
_selfx
pyautogui.Size._NT`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*)
width
builtins.int"builtins.int **
height
builtins.int"builtins.int z38z39z310z311z312z313*¥
__new__pyautogui.Size.__new__"x
pyautogui.Size._NT`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*ß
_clsú
Type[pyautogui.Size._NT]x
pyautogui.Size._NT`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"type*'
width
builtins.int"builtins.int*(
height
builtins.int"builtins.intz38z39z310z311z312z313*ú
_asdictpyautogui.Size._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*É
_selfx
pyautogui.Size._NT`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intz38z39z310z311z312z313*÷
_makepyautogui.Size._make"x
pyautogui.Size._NT`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*ß
_clsú
Type[pyautogui.Size._NT]x
pyautogui.Size._NT`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz38z39z310z311z312z313j38j39j310j311j312j313rs
widthpyautogui.Size.width
builtins.int"builtins.int*38*38*39*39*310*310*311*311*312*312*313*313ru
heightpyautogui.Size.height
builtins.int"builtins.int*38*38*39*39*310*310*311*311*312*312*313*313rü
_fieldspyautogui.Size._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310*311*312*313r†
_field_typespyautogui.Size._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313r¶
_field_defaultspyautogui.Size._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313r[
_sourcepyautogui.Size._source
builtins.str"builtins.str*38*39*310*311*312*313r¶
__annotations__pyautogui.Size.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313rÓ
__match_args__pyautogui.Size.__match_args__®
2Tuple[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310*311*312*313°
centerpyscreeze.center"¢
+TypeAlias[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Point*√
coords∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intz38z39z310z311z312z313å
pixelpyscreeze.pixel"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*#
x
builtins.int"builtins.int*#
y
builtins.int"builtins.intz38z39z310z311z312z313π
pixelMatchesColorpyscreeze.pixelMatchesColor"
builtins.bool"builtins.bool*#
x
builtins.int"builtins.int*#
y
builtins.int"builtins.int*—
expectedRGBColor∫
oUnion[Tuple[builtins.int,builtins.int,builtins.int],Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*-
	tolerance
builtins.int"builtins.int z38z39z310z311z312z313µ

screenshotpyscreeze.screenshot"
Any*Ã
imageFilename∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None z38z39z310z311z312z313°
$raisePyAutoGUIImageNotFoundException.pyautogui.raisePyAutoGUIImageNotFoundException"K
CallableType[builtins.function]&
builtins.function"builtins.function*`
wrappedFunctionK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313F
	mouseInfopyautogui.mouseInfo"
Nonez38z39z310z311z312z313º
useImageNotFoundException#pyautogui.useImageNotFoundException"
None*T
valueG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z38z39z310z311z312z313ó
isShiftCharacterpyautogui.isShiftCharacter"
builtins.bool"builtins.bool*+
	character
builtins.str"builtins.strz38z39z310z311z312z313Ö
getPointOnLinepyautogui.getPointOnLine"l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float*(
x1 
builtins.float"builtins.float*(
y1 
builtins.float"builtins.float*(
x2 
builtins.float"builtins.float*(
y2 
builtins.float"builtins.float*'
n 
builtins.float"builtins.floatz38z39z310z311z312z313Å
linearpyautogui.linear" 
builtins.float"builtins.float*'
n 
builtins.float"builtins.floatz38z39z310z311z312z313ç
positionpyautogui.position"≤
/TypeAlias[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"pyautogui.Point*M
xD
Union[builtins.int,None]
builtins.int"builtins.int
None *M
yD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310z311z312z313÷
sizepyautogui.size"°
+TypeAlias[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"pyautogui.Sizez38z39z310z311z312z313™
onScreenpyautogui.onScreen"
builtins.bool"builtins.bool*Ï
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None*_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None z38z39z310z311z312z313‹
	mouseDownpyautogui.mouseDown"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None **
button
builtins.str"builtins.str *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313ÿ
mouseUppyautogui.mouseUp"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None **
button
builtins.str"builtins.str *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313ÿ
clickpyautogui.click"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *P
clicksB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *0
interval 
builtins.float"builtins.float **
button
builtins.str"builtins.str *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313‚
	leftClickpyautogui.leftClick"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
interval 
builtins.float"builtins.float *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313‰

rightClickpyautogui.rightClick"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
interval 
builtins.float"builtins.float *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313Ê
middleClickpyautogui.middleClick"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
interval 
builtins.float"builtins.float *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313í
doubleClickpyautogui.doubleClick"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
interval 
builtins.float"builtins.float **
button
builtins.str"builtins.str *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313í
tripleClickpyautogui.tripleClick"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
interval 
builtins.float"builtins.float **
button
builtins.str"builtins.str *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313Ã
scrollpyautogui.scroll"
None*,
clicks 
builtins.float"builtins.float*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313Œ
hscrollpyautogui.hscroll"
None*,
clicks 
builtins.float"builtins.float*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313Œ
vscrollpyautogui.vscroll"
None*,
clicks 
builtins.float"builtins.float*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313Å
moveTopyautogui.moveTo"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *3
logScreenshot
builtins.bool"builtins.bool *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313è
moveRelpyautogui.moveRel"
None*Ù
xOffset‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *e
yOffsetV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function *3
logScreenshot
builtins.bool"builtins.bool *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313â
dragTopyautogui.dragTo"
None*Ó
x‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *_
yV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function **
button
builtins.str"builtins.str *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool *1
mouseDownUp
builtins.bool"builtins.bool z38z39z310z311z312z313ó
dragRelpyautogui.dragRel"
None*Ù
xOffset‰
aUnion[TypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]],None]Ú
UTypeAlias[Union[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]]¯
JUnion[builtins.str,typing.SupportsInt,typing.Sequence[typing.SupportsInt]]
builtins.str"builtins.str(
typing.SupportsInt"typing.SupportsInt`
#typing.Sequence[typing.SupportsInt](
typing.SupportsInt"typing.SupportsInt"typing.Sequence"pyautogui._NormalizeableXArg
None *e
yOffsetV
Union[typing.SupportsInt,None](
typing.SupportsInt"typing.SupportsInt
None *0
duration 
builtins.float"builtins.float *X
tweenK
CallableType[builtins.function]&
builtins.function"builtins.function **
button
builtins.str"builtins.str *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool *1
mouseDownUp
builtins.bool"builtins.bool z38z39z310z311z312z313Ö

isValidKeypyautogui.isValidKey"
builtins.bool"builtins.bool*%
key
builtins.str"builtins.strz38z39z310z311z312z313ı
keyDownpyautogui.keyDown"
None*%
key
builtins.str"builtins.str*\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313Ò
keyUppyautogui.keyUp"
None*%
key
builtins.str"builtins.str*\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313Ä
presspyautogui.press"
None*Æ
keys£
1Union[builtins.str,typing.Iterable[builtins.str]]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*Q
pressesB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *0
interval 
builtins.float"builtins.float *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313À
holdpyautogui.hold"Z
)contextlib._GeneratorContextManager[None]
None"#contextlib._GeneratorContextManager*Æ
keys£
1Union[builtins.str,typing.Iterable[builtins.str]]
builtins.str"builtins.strN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313∏
	typewritepyautogui.typewrite"
None*±
message£
1Union[builtins.str,typing.Sequence[builtins.str]]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*0
interval 
builtins.float"builtins.float *\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
_pause
builtins.bool"builtins.bool z38z39z310z311z312z313¯
hotkeypyautogui.hotkey"
None*&
args
builtins.str"builtins.str*\
logScreenshotG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *0
interval 
builtins.float"builtins.float z38z39z310z311z312z313N
failSafeCheckpyautogui.failSafeCheck"
Nonez38z39z310z311z312z313æ
displayMousePositionpyautogui.displayMousePosition"
None*/
xOffset 
builtins.float"builtins.float */
yOffset 
builtins.float"builtins.float z38z39z310z311z312z313m
sleeppyautogui.sleep"
None*-
seconds 
builtins.float"builtins.floatz38z39z310z311z312z313ó
	countdownpyautogui.countdown"
None*O
secondsB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313É
runpyautogui.run"
None*,

commandStr
builtins.str"builtins.str*ò
_ssCountá
)Union[typing.Sequence[builtins.int],None]N
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence
None z38z39z310z311z312z313ã
	printInfopyautogui.printInfo"
builtins.str"builtins.str*/
	dontPrint
builtins.bool"builtins.bool z38z39z310z311z312z313˚
getInfopyautogui.getInfo"¿
xTuple[builtins.str,builtins.str,builtins.str,builtins.str,TypeAlias[Tuple[builtins.int,builtins.int]],datetime.datetime]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str°
+TypeAlias[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"pyautogui.Size&
datetime.datetime"datetime.datetimez38z39z310z311z312z313"Ç
locatepyscreeze.locateå
locatepyscreeze.locate"Û
QUnion[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None*–
needleImageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*“
haystackImageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *Ô

confidence‹
HUnion[typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str],
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str 0:overloadX∫
locatepyscreeze.locate"Û
QUnion[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None*S
needleImageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*U
haystackImageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *

confidence
None 0:overloadX"38"39"310"311"312"313"Ñ
	locateAllpyscreeze.locateAll∂
	locateAllpyscreeze.locateAll"ù
atyping.Generator[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None,None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None
None"typing.Generator*–
needleImageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*“
haystackImageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *)
limit
builtins.int"builtins.int *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *Ô

confidence‹
HUnion[typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str],
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str 0:overloadXå	
	locateAllpyscreeze.locateAll"ù
atyping.Generator[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None,None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None
None"typing.Generator*S
needleImageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*U
haystackImageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *

confidence
None 0:overloadX"38"39"310"311"312"313"¸
locateAllOnScreenpyscreeze.locateAllOnScreenÎ

locateAllOnScreenpyscreeze.locateAllOnScreen"ù
atyping.Generator[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None,None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None
None"typing.Generator* 
imageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *)
limit
builtins.int"builtins.int *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *Ô

confidence‹
HUnion[typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str],
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str 0:overloadXø
locateAllOnScreenpyscreeze.locateAllOnScreen"ù
atyping.Generator[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None,None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None
None"typing.Generator*M
imageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *

confidence
None 0:overloadX"38"39"310"311"312"313"ˆ
locateCenterOnScreenpyscreeze.locateCenterOnScreen˘	
locateCenterOnScreenpyscreeze.locateCenterOnScreen"Í
7Union[TypeAlias[Tuple[builtins.int,builtins.int]],None]¢
+TypeAlias[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Point
None* 
imageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*3
minSearchTime 
builtins.float"builtins.float*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *Ô

confidence‹
HUnion[typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str],
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str 0:overloadX•
locateCenterOnScreenpyscreeze.locateCenterOnScreen"Í
7Union[TypeAlias[Tuple[builtins.int,builtins.int]],None]¢
+TypeAlias[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Point
None*M
imageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*3
minSearchTime 
builtins.float"builtins.float*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *

confidence
None 0:overloadX"38"39"310"311"312"313"Ë
locateOnScreenpyscreeze.locateOnScreen¯

locateOnScreenpyscreeze.locateOnScreen"Û
QUnion[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None* 
imageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*5
minSearchTime 
builtins.float"builtins.float *X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *Ô

confidence‹
HUnion[typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str],
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str 0:overloadX§
locateOnScreenpyscreeze.locateOnScreen"Û
QUnion[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None*M
imageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*5
minSearchTime 
builtins.float"builtins.float *X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *ú
regionç
FUnion[Tuple[builtins.int,builtins.int,builtins.int,builtins.int],None]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
None *(
step
builtins.int"builtins.int *

confidence
None 0:overloadX"38"39"310"311"312"313"é
locateOnWindowpyscreeze.locateOnWindowÀ
locateOnWindowpyscreeze.locateOnWindow"Û
QUnion[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None* 
imageæ
1Union[builtins.str,Any,TypeAlias[TypeAlias[Any]]]
builtins.str"builtins.str
Any`
TypeAlias[TypeAlias[Any]]1
TypeAlias[Any]
Any"_typeshed.Incomplete"pyscreeze._Mat*'
title
builtins.str"builtins.str*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *(
step
builtins.int"builtins.int *Ô

confidence‹
HUnion[typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str],
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str 0:overloadX˜
locateOnWindowpyscreeze.locateOnWindow"Û
QUnion[TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]],None]ë
ETypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"pyscreeze.Box
None*M
imageB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*'
title
builtins.str"builtins.str*X
	grayscaleG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None */
limit"
builtins.object"builtins.object *(
step
builtins.int"builtins.int *

confidence
None 0:overloadX"38"39"310"311"312"313*Ü
__path__pyautogui.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*°
__annotations__pyautogui.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*
grabpyscreeze.grabK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313*à
	KEY_NAMESpyautogui.KEY_NAMESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*ê
KEYBOARD_KEYSpyautogui.KEYBOARD_KEYSJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*P
LEFTpyautogui.LEFT
builtins.str"builtins.str*38*39*310*311*312*313*T
MIDDLEpyautogui.MIDDLE
builtins.str"builtins.str*38*39*310*311*312*313*R
RIGHTpyautogui.RIGHT
builtins.str"builtins.str*38*39*310*311*312*313*V
PRIMARYpyautogui.PRIMARY
builtins.str"builtins.str*38*39*310*311*312*313*Z
	SECONDARYpyautogui.SECONDARY
builtins.str"builtins.str*38*39*310*311*312*313*¨
G_LOG_SCREENSHOTS_FILENAMES%pyautogui.G_LOG_SCREENSHOTS_FILENAMESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*T
QWERTYpyautogui.QWERTY
builtins.str"builtins.str*38*39*310*311*312*313*T
QWERTZpyautogui.QWERTZ
builtins.str"builtins.str*38*39*310*311*312*313*f
MINIMUM_SLEEPpyautogui.MINIMUM_SLEEP 
builtins.float"builtins.float*38*39*310*311*312*313*h
LOG_SCREENSHOTSpyautogui.LOG_SCREENSHOTS
builtins.bool"builtins.bool*38*39*310*311*312*313*ö
LOG_SCREENSHOTS_LIMITpyautogui.LOG_SCREENSHOTS_LIMITD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*39*310*311*312*313*Z
FAILSAFEpyautogui.FAILSAFE
builtins.bool"builtins.bool*38*39*310*311*312*313*V
PAUSEpyautogui.PAUSE 
builtins.float"builtins.float*38*39*310*311*312*313*t
DARWIN_CATCH_UP_TIMEpyautogui.DARWIN_CATCH_UP_TIME 
builtins.float"builtins.float*38*39*310*311*312*313*Ì
FAILSAFE_POINTSpyautogui.FAILSAFE_POINTS¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*l
MINIMUM_DURATIONpyautogui.MINIMUM_DURATION 
builtins.float"builtins.float*38*39*310*311*312*313*
movepyautogui.moveK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313*
dragpyautogui.dragK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313*Å
writepyautogui.writeK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313