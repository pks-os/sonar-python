
exifread.heicR
WrongBoxexifread.heic.WrongBox"builtins.Exceptionj38j39j310j311j312j313R
NoParserexifread.heic.NoParser"builtins.Exceptionj38j39j310j311j312j313V

BoxVersionexifread.heic.BoxVersion"builtins.Exceptionj38j39j310j311j312j313P
BadSizeexifread.heic.BadSize"builtins.Exceptionj38j39j310j311j312j313∏
Boxexifread.heic.Box"builtins.object*¶
__init__exifread.heic.Box.__init__"
None*0
self&
exifread.heic.Box"exifread.heic.Box*&
name
builtins.str"builtins.strz38z39z310z311z312z313*¨
	set_sizesexifread.heic.Box.set_sizes"
None*0
self&
exifread.heic.Box"exifread.heic.Box*(
offset
builtins.int"builtins.int*(
length
builtins.int"builtins.int*-
base_offset
builtins.int"builtins.int*'
index
builtins.int"builtins.intz38z39z310z311z312z313*®
set_fullexifread.heic.Box.set_full"
None*0
self&
exifread.heic.Box"exifread.heic.Box*(
vflags
builtins.int"builtins.intz38z39z310z311z312z313j38j39j310j311j312j313r^
versionexifread.heic.Box.version
builtins.int"builtins.int*38*39*310*311*312*313rj
minor_versionexifread.heic.Box.minor_version
builtins.int"builtins.int*38*39*310*311*312*313rd

item_countexifread.heic.Box.item_count
builtins.int"builtins.int*38*39*310*311*312*313rX
sizeexifread.heic.Box.size
builtins.int"builtins.int*38*39*310*311*312*313rZ
afterexifread.heic.Box.after
builtins.int"builtins.int*38*39*310*311*312*313rV
posexifread.heic.Box.pos
builtins.int"builtins.int*38*39*310*311*312*313rê
compatexifread.heic.Box.compatP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*38*39*310*311*312*313rf
base_offsetexifread.heic.Box.base_offset
builtins.int"builtins.int*38*39*310*311*312*313r¡
subsexifread.heic.Box.subsÑ
-builtins.dict[builtins.str,exifread.heic.Box]
builtins.str"builtins.str&
exifread.heic.Box"exifread.heic.Box"builtins.dict*38*39*310*311*312*313r‹
locsexifread.heic.Box.locsü
Kbuiltins.dict[builtins.int,builtins.list[Tuple[builtins.int,builtins.int]]]
builtins.int"builtins.int¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list"builtins.dict*38*39*310*311*312*313rô
	exif_infeexifread.heic.Box.exif_infeS
Union[exifread.heic.Box,None]&
exifread.heic.Box"exifread.heic.Box
None*38*39*310*311*312*313r^
item_idexifread.heic.Box.item_id
builtins.int"builtins.int*38*39*310*311*312*313rf
	item_typeexifread.heic.Box.item_type 
builtins.bytes"builtins.bytes*38*39*310*311*312*313rf
	item_nameexifread.heic.Box.item_name 
builtins.bytes"builtins.bytes*38*39*310*311*312*313rz
item_protection_index'exifread.heic.Box.item_protection_index
builtins.int"builtins.int*38*39*310*311*312*313rj
major_brandexifread.heic.Box.major_brand 
builtins.bytes"builtins.bytes*38*39*310*311*312*313rf
offset_sizeexifread.heic.Box.offset_size
builtins.int"builtins.int*38*39*310*311*312*313rf
length_sizeexifread.heic.Box.length_size
builtins.int"builtins.int*38*39*310*311*312*313rp
base_offset_size"exifread.heic.Box.base_offset_size
builtins.int"builtins.int*38*39*310*311*312*313rd

index_sizeexifread.heic.Box.index_size
builtins.int"builtins.int*38*39*310*311*312*313rZ
flagsexifread.heic.Box.flags
builtins.int"builtins.int*38*39*310*311*312*313rX
nameexifread.heic.Box.name
builtins.str"builtins.str*38*39*310*311*312*313ß
HEICExifFinderexifread.heic.HEICExifFinder"builtins.object*‚
__init__%exifread.heic.HEICExifFinder.__init__"
None*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*A
file_handle0
exifread._types.Reader"exifread._types.Readerz38z39z310z311z312z313*◊
get exifread.heic.HEICExifFinder.get" 
builtins.bytes"builtins.bytes*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*(
nbytes
builtins.int"builtins.intz38z39z310z311z312z313*≠
get16"exifread.heic.HEICExifFinder.get16"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz38z39z310z311z312z313*≠
get32"exifread.heic.HEICExifFinder.get32"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz38z39z310z311z312z313*≠
get64"exifread.heic.HEICExifFinder.get64"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz38z39z310z311z312z313*˚

get_int4x2'exifread.heic.HEICExifFinder.get_int4x2"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz38z39z310z311z312z313*Ÿ
get_int$exifread.heic.HEICExifFinder.get_int"
builtins.int"builtins.int*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*&
size
builtins.int"builtins.intz38z39z310z311z312z313*ª

get_string'exifread.heic.HEICExifFinder.get_string" 
builtins.bytes"builtins.bytes*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz38z39z310z311z312z313*Ω
next_box%exifread.heic.HEICExifFinder.next_box"&
exifread.heic.Box"exifread.heic.Box*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz38z39z310z311z312z313*–
get_full%exifread.heic.HEICExifFinder.get_full"
None*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz38z39z310z311z312z313*»
skip!exifread.heic.HEICExifFinder.skip"
None*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz38z39z310z311z312z313*Ì
expect_parse)exifread.heic.HEICExifFinder.expect_parse"&
exifread.heic.Box"exifread.heic.Box*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*&
name
builtins.str"builtins.strz38z39z310z311z312z313*ó

get_parser'exifread.heic.HEICExifFinder.get_parser"K
CallableType[builtins.function]&
builtins.function"builtins.function*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz38z39z310z311z312z313*
	parse_box&exifread.heic.HEICExifFinder.parse_box"&
exifread.heic.Box"exifread.heic.Box*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinder*/
box&
exifread.heic.Box"exifread.heic.Boxz38z39z310z311z312z313*ˇ
	find_exif&exifread.heic.HEICExifFinder.find_exif"f
"Tuple[builtins.int,builtins.bytes]
builtins.int"builtins.int 
builtins.bytes"builtins.bytes*F
self<
exifread.heic.HEICExifFinder"exifread.heic.HEICExifFinderz38z39z310z311z312z313j38j39j310j311j312j313rÖ
file_handle(exifread.heic.HEICExifFinder.file_handle0
exifread._types.Reader"exifread._types.Reader*38*39*310*311*312*313*•
__annotations__exifread.heic.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*\
loggerexifread.heic.logger 
logging.Logger"logging.Logger*38*39*310*311*312*313