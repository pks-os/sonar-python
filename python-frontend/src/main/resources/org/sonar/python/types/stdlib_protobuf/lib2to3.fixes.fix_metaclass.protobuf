
lib2to3.fixes.fix_metaclassú
FixMetaclass(lib2to3.fixes.fix_metaclass.FixMetaclass"lib2to3.fixer_base.BaseFix*î
	transform2lib2to3.fixes.fix_metaclass.FixMetaclass.transform"
None*^
selfT
(lib2to3.fixes.fix_metaclass.FixMetaclass"(lib2to3.fixes.fix_metaclass.FixMetaclass*
node
Any*
results
Anyz38z39z310z311z312z313j38j39j310j311j312j313rŸ
BM_compatible6lib2to3.fixes.fix_metaclass.FixMetaclass.BM_compatible:
Literal[builtins.bool]	
builtins.bool"builtins.bool*38*39*310*311*312*313ru
PATTERN0lib2to3.fixes.fix_metaclass.FixMetaclass.PATTERN
builtins.str"builtins.str*38*39*310*311*312*313b
has_metaclass)lib2to3.fixes.fix_metaclass.has_metaclass*

parentz38z39z310z311z312z313}
fixup_parse_tree,lib2to3.fixes.fix_metaclass.fixup_parse_tree"
None*
cls_node
Anyz38z39z310z311z312z313¥
fixup_simple_stmt-lib2to3.fixes.fix_metaclass.fixup_simple_stmt"
None*
parent
Any*
i
Any*
	stmt_node
Anyz38z39z310z311z312z313‡
remove_trailing_newline3lib2to3.fixes.fix_metaclass.remove_trailing_newline"
None*
node
Anyz38z39z310z311z312z313¡

find_metas&lib2to3.fixes.fix_metaclass.find_metas"·
Wtyping.Generator[Tuple[lib2to3.pytree.Base,builtins.int,lib2to3.pytree.Base],None,None]µ
;Tuple[lib2to3.pytree.Base,builtins.int,lib2to3.pytree.Base]*
lib2to3.pytree.Base"lib2to3.pytree.Base
builtins.int"builtins.int*
lib2to3.pytree.Base"lib2to3.pytree.Base
None
None"typing.Generator*
cls_node
Anyz38z39z310z311z312z313r
fixup_indent(lib2to3.fixes.fix_metaclass.fixup_indent"
None*
suite
Anyz38z39z310z311z312z313*³
__annotations__+lib2to3.fixes.fix_metaclass.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313