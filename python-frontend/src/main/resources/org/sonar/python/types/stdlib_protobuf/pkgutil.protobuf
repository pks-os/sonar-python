
pkgutilı,

ModuleInfopkgutil.ModuleInfo"builtins.tuple*ò	
_replacepkgutil.ModuleInfo._replace"à
pkgutil.ModuleInfo._NTÎ
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool*î
_selfà
pkgutil.ModuleInfo._NTÎ
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool*Ÿ
module_finder√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder *(
name
builtins.str"builtins.str *+
ispkg
builtins.bool"builtins.bool z38z39z310z311z312z313*∏	
__new__pkgutil.ModuleInfo.__new__"à
pkgutil.ModuleInfo._NTÎ
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool*º
_cls±
Type[pkgutil.ModuleInfo._NT]à
pkgutil.ModuleInfo._NTÎ
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"type*◊
module_finder√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder*&
name
builtins.str"builtins.str*)
ispkg
builtins.bool"builtins.boolz38z39z310z311z312z313*±
_asdictpkgutil.ModuleInfo._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*î
_selfà
pkgutil.ModuleInfo._NTÎ
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.boolz38z39z310z311z312z313*Ä
_makepkgutil.ModuleInfo._make"à
pkgutil.ModuleInfo._NTÎ
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool*º
_cls±
Type[pkgutil.ModuleInfo._NT]à
pkgutil.ModuleInfo._NTÎ
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0:classmethodpz38z39z310z311z312z313j38j39j310j311j312j313rØ
module_finder pkgutil.ModuleInfo.module_finder√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder*38*38*39*39*310*310*311*311*312*312*313*313ru
namepkgutil.ModuleInfo.name
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313ry
ispkgpkgutil.ModuleInfo.ispkg
builtins.bool"builtins.bool*38*38*39*39*310*310*311*311*312*312*313*313rœ
_fieldspkgutil.ModuleInfo._fieldsã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310*311*312*313r§
_field_typespkgutil.ModuleInfo._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313r™
_field_defaults"pkgutil.ModuleInfo._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313r_
_sourcepkgutil.ModuleInfo._source
builtins.str"builtins.str*38*39*310*311*312*313r™
__annotations__"pkgutil.ModuleInfo.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313r¡
__match_args__!pkgutil.ModuleInfo.__match_args__˜
HTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310*311*312*313®
ImpImporterpkgutil.ImpImporter"builtins.object*÷
__init__pkgutil.ImpImporter.__init__"
None*4
self*
pkgutil.ImpImporter"pkgutil.ImpImporter*P
pathD
Union[builtins.str,None]
builtins.str"builtins.str
None z38z39z310z311z312z313j38j39j310j311j312j313ä
	ImpLoaderpkgutil.ImpLoader"builtins.object*º
__init__pkgutil.ImpLoader.__init__"
None*0
self&
pkgutil.ImpLoader"pkgutil.ImpLoader**
fullname
builtins.str"builtins.str*L
fileB
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO**
filename
builtins.str"builtins.str*ï
etcã
-Tuple[builtins.str,builtins.str,builtins.int]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.int"builtins.intz38z39z310z311z312z313j38j39j310j311j312j313⁄
extend_pathpkgutil.extend_path"s
pkgutil._PathTN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable"typing.Iterable*}
paths
pkgutil._PathTN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable"typing.Iterable*&
name
builtins.str"builtins.strz38z39z310z311z312z313»
find_loaderpkgutil.find_loader"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None**
fullname
builtins.str"builtins.strz38z39z310z311z312z313Ê
get_importerpkgutil.get_importer"w
)Union[importlib.abc.PathEntryFinder,None]>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
None*+
	path_item
builtins.str"builtins.strz38z39z310z311z312z313Ã

get_loaderpkgutil.get_loader"\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*0
module_or_name
builtins.str"builtins.strz38z39z310z311z312z313†
iter_importerspkgutil.iter_importers"´
Rtyping.Iterator[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder"typing.Iterator*,
fullname
builtins.str"builtins.str z38z39z310z311z312z313è
iter_modulespkgutil.iter_modules"â
typing.Iterator[TypeAlias[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]]Ù
nTypeAlias[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]Î
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"pkgutil.ModuleInfo"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str z38z39z310z311z312z313≥
	read_codepkgutil.read_code"
Any*n
streamb
&_typeshed.SupportsRead[builtins.bytes] 
builtins.bytes"builtins.bytes"_typeshed.SupportsReadz38z39z310z311z312z313™
walk_packagespkgutil.walk_packages"â
typing.Iterator[TypeAlias[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]]Ù
nTypeAlias[Tuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]]Î
cTuple[Union[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder],builtins.str,builtins.bool]√
AUnion[importlib.abc.MetaPathFinder,importlib.abc.PathEntryFinder]<
importlib.abc.MetaPathFinder"importlib.abc.MetaPathFinder>
importlib.abc.PathEntryFinder"importlib.abc.PathEntryFinder
builtins.str"builtins.str
builtins.bool"builtins.bool"pkgutil.ModuleInfo"typing.Iterator*î
pathá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None **
prefix
builtins.str"builtins.str *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z38z39z310z311z312z313€
get_datapkgutil.get_data"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*)
package
builtins.str"builtins.str**
resource
builtins.str"builtins.strz38z39z310z311z312z313m
resolve_namepkgutil.resolve_name"
Any*&
name
builtins.str"builtins.strz39z310z311z312z313*ü
__annotations__pkgutil.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*Ç
__all__pkgutil.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313