
markdown.blockprocessorsµ
BlockProcessor'markdown.blockprocessors.BlockProcessor"builtins.object*í
__init__0markdown.blockprocessors.BlockProcessor.__init__"
None*\
selfR
'markdown.blockprocessors.BlockProcessor"'markdown.blockprocessors.BlockProcessor*P
parserD
 markdown.blockparser.BlockParser" markdown.blockparser.BlockParserz38z39z310z311z312z313*˝
	lastChild1markdown.blockprocessors.BlockProcessor.lastChild"w
)Union[xml.etree.ElementTree.Element,None]>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element
None*\
selfR
'markdown.blockprocessors.BlockProcessor"'markdown.blockprocessors.BlockProcessor*J
parent>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Elementz38z39z310z311z312z313*é
detab-markdown.blockprocessors.BlockProcessor.detab"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*\
selfR
'markdown.blockprocessors.BlockProcessor"'markdown.blockprocessors.BlockProcessor*&
text
builtins.str"builtins.str*R
lengthD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310z311z312z313*´

looseDetab2markdown.blockprocessors.BlockProcessor.looseDetab"
builtins.str"builtins.str*\
selfR
'markdown.blockprocessors.BlockProcessor"'markdown.blockprocessors.BlockProcessor*&
text
builtins.str"builtins.str*)
level
builtins.int"builtins.int z38z39z310z311z312z313*√
test,markdown.blockprocessors.BlockProcessor.test"
builtins.bool"builtins.bool*\
selfR
'markdown.blockprocessors.BlockProcessor"'markdown.blockprocessors.BlockProcessor*J
parent>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*'
block
builtins.str"builtins.strz38z39z310z311z312z313*ô
run+markdown.blockprocessors.BlockProcessor.run"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*\
selfR
'markdown.blockprocessors.BlockProcessor"'markdown.blockprocessors.BlockProcessor*J
parent>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*V
blocksJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz38z39z310z311z312z313j38j39j310j311j312j313rö
parser.markdown.blockprocessors.BlockProcessor.parserD
 markdown.blockparser.BlockParser" markdown.blockparser.BlockParser*38*39*310*311*312*313rz

tab_length2markdown.blockprocessors.BlockProcessor.tab_length
builtins.int"builtins.int*38*39*310*311*312*313÷
ListIndentProcessor,markdown.blockprocessors.ListIndentProcessor"'markdown.blockprocessors.BlockProcessor*°
__init__5markdown.blockprocessors.ListIndentProcessor.__init__"
None*f
self\
,markdown.blockprocessors.ListIndentProcessor",markdown.blockprocessors.ListIndentProcessor*P
parserD
 markdown.blockparser.BlockParser" markdown.blockparser.BlockParserz38z39z310z311z312z313* 
create_item8markdown.blockprocessors.ListIndentProcessor.create_item"
None*f
self\
,markdown.blockprocessors.ListIndentProcessor",markdown.blockprocessors.ListIndentProcessor*J
parent>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*'
block
builtins.str"builtins.strz38z39z310z311z312z313*“
	get_level6markdown.blockprocessors.ListIndentProcessor.get_level"ì
1Tuple[builtins.int,xml.etree.ElementTree.Element]
builtins.int"builtins.int>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*f
self\
,markdown.blockprocessors.ListIndentProcessor",markdown.blockprocessors.ListIndentProcessor*J
parent>
xml.etree.ElementTree.Element"xml.etree.ElementTree.Element*'
block
builtins.str"builtins.strz38z39z310z311z312z313j38j39j310j311j312j313r≠

ITEM_TYPES7markdown.blockprocessors.ListIndentProcessor.ITEM_TYPESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313r≠

LIST_TYPES7markdown.blockprocessors.ListIndentProcessor.LIST_TYPESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313r•
	INDENT_RE6markdown.blockprocessors.ListIndentProcessor.INDENT_RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313Ü
CodeBlockProcessor+markdown.blockprocessors.CodeBlockProcessor"'markdown.blockprocessors.BlockProcessorj38j39j310j311j312j313™
BlockQuoteProcessor,markdown.blockprocessors.BlockQuoteProcessor"'markdown.blockprocessors.BlockProcessor*Ö
clean2markdown.blockprocessors.BlockQuoteProcessor.clean"
builtins.str"builtins.str*f
self\
,markdown.blockprocessors.BlockQuoteProcessor",markdown.blockprocessors.BlockQuoteProcessor*&
line
builtins.str"builtins.strz38z39z310z311z312z313j38j39j310j311j312j313ró
RE/markdown.blockprocessors.BlockQuoteProcessor.RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313≠
OListProcessor'markdown.blockprocessors.OListProcessor"'markdown.blockprocessors.BlockProcessor*í
__init__0markdown.blockprocessors.OListProcessor.__init__"
None*\
selfR
'markdown.blockprocessors.OListProcessor"'markdown.blockprocessors.OListProcessor*P
parserD
 markdown.blockparser.BlockParser" markdown.blockparser.BlockParserz38z39z310z311z312z313*≠
	get_items1markdown.blockprocessors.OListProcessor.get_items"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*\
selfR
'markdown.blockprocessors.OListProcessor"'markdown.blockprocessors.OListProcessor*'
block
builtins.str"builtins.strz38z39z310z311z312z313j38j39j310j311j312j313rl
TAG+markdown.blockprocessors.OListProcessor.TAG
builtins.str"builtins.str*38*39*310*311*312*313rz

STARTSWITH2markdown.blockprocessors.OListProcessor.STARTSWITH
builtins.str"builtins.str*38*39*310*311*312*313rv
LAZY_OL/markdown.blockprocessors.OListProcessor.LAZY_OL
builtins.bool"builtins.bool*38*39*310*311*312*313r¨
SIBLING_TAGS4markdown.blockprocessors.OListProcessor.SIBLING_TAGSJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313rí
RE*markdown.blockprocessors.OListProcessor.RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313rû
CHILD_RE0markdown.blockprocessors.OListProcessor.CHILD_RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313r†
	INDENT_RE1markdown.blockprocessors.OListProcessor.INDENT_RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313ì
UListProcessor'markdown.blockprocessors.UListProcessor"'markdown.blockprocessors.OListProcessor*í
__init__0markdown.blockprocessors.UListProcessor.__init__"
None*\
selfR
'markdown.blockprocessors.UListProcessor"'markdown.blockprocessors.UListProcessor*P
parserD
 markdown.blockparser.BlockParser" markdown.blockparser.BlockParserz38z39z310z311z312z313j38j39j310j311j312j313¢
HashHeaderProcessor,markdown.blockprocessors.HashHeaderProcessor"'markdown.blockprocessors.BlockProcessorj38j39j310j311j312j313ró
RE/markdown.blockprocessors.HashHeaderProcessor.RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313®
SetextHeaderProcessor.markdown.blockprocessors.SetextHeaderProcessor"'markdown.blockprocessors.BlockProcessorj38j39j310j311j312j313rô
RE1markdown.blockprocessors.SetextHeaderProcessor.RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313ï
HRProcessor$markdown.blockprocessors.HRProcessor"'markdown.blockprocessors.BlockProcessorj38j39j310j311j312j313rg
RE'markdown.blockprocessors.HRProcessor.RE
builtins.str"builtins.str*38*39*310*311*312*313rù
	SEARCH_RE.markdown.blockprocessors.HRProcessor.SEARCH_RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313rë
match*markdown.blockprocessors.HRProcessor.match@
re.Match[builtins.str]
builtins.str"builtins.str"re.Match*38*39*310*311*312*313à
EmptyBlockProcessor,markdown.blockprocessors.EmptyBlockProcessor"'markdown.blockprocessors.BlockProcessorj38j39j310j311j312j313ü
ReferenceProcessor+markdown.blockprocessors.ReferenceProcessor"'markdown.blockprocessors.BlockProcessorj38j39j310j311j312j313rñ
RE.markdown.blockprocessors.ReferenceProcessor.RED
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313Ü
ParagraphProcessor+markdown.blockprocessors.ParagraphProcessor"'markdown.blockprocessors.BlockProcessorj38j39j310j311j312j313µ
build_block_parser+markdown.blockprocessors.build_block_parser"
Any*8
md0
markdown.core.Markdown"markdown.core.Markdown*
kwargs
Anyz38z39z310z311z312z313*∞
__annotations__(markdown.blockprocessors.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*g
loggermarkdown.blockprocessors.logger 
logging.Logger"logging.Logger*38*39*310*311*312*313