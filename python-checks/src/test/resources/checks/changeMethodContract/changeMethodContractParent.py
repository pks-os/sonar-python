from typing import Any

class ParentClass(object):
  def __init__(p1, p2): ...
  def compliant(self, param1): ...
  def my_method(self, param1): ...
  def with_default(self, param1=42): ...
  def changed_param_order(self, param1, param2): ...
  def with_keyword_only(self, param1, *, param2): ...
  def with_kwargs(self, param1, **kwargs): ...
  @foo
  def with_decorator(self, param1): ...
  def __private_method(self): ...
  def using_tuple(self, (a, b)): ...
  def positional_only(self, param1, /, param2, *, param3): ...
  def with_two_keyword_only(self, *, param1, param2): ...
  attr = 42

class IntermediateWithGenericParentClass(ParentClass[Any]):
  ...

class IntermediateClass(ParentClass):
  ...
